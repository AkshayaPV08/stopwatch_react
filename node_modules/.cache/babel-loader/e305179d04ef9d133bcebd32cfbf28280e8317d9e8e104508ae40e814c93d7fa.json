{"ast":null,"code":"// import { useEffect, useState, useRef } from \"react\";\n\n// export default function Timer() {\n//   const [time, setTime] = useState(0);\n\n//   const [running, setRunning] = useState(true);\n\n//   const timer = useRef();\n\n//   useEffect(() => {\n//     if (running) {\n//       timer.current = setInterval(() => {\n//         setTime((prevTime) => prevTime + 1);\n//       }, 1000);\n//     }\n//     return () => clearInterval(timer.current);\n//   }, [running]);\n\n//   return (\n//     <div className=\"stopwatch\">\n//       <p className=\"timer\">{format(time)}</p>\n//       <div className=\"actions\">\n//         <button onClick={() => setTime(0)}>Restart</button>\n//         <button\n//           onClick={() => {\n//             if (running) clearInterval(timer.current);\n//             setRunning(!running);\n//           }}\n//         >\n//           {running ? \"Stop\" : \"Resume\"}\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n// const format = (time) => {\n//   let hours = Math.floor((time / 60 / 60) % 24);\n//   let minutes = Math.floor((time / 60) % 60);\n//   let seconds = Math.floor(time % 60);\n\n//   hours = hours < 10 ? \"0\" + hours : hours;\n//   minutes = minutes < 10 ? \"0\" + minutes : minutes;\n//   seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n//   return hours + \":\" + minutes + \":\" + seconds;\n// };","map":{"version":3,"names":[],"sources":["/home/akshaya/Documents/React Workspace/stop-watch/src/Timer.js"],"sourcesContent":["// import { useEffect, useState, useRef } from \"react\";\n\n// export default function Timer() {\n//   const [time, setTime] = useState(0);\n\n//   const [running, setRunning] = useState(true);\n\n//   const timer = useRef();\n\n//   useEffect(() => {\n//     if (running) {\n//       timer.current = setInterval(() => {\n//         setTime((prevTime) => prevTime + 1);\n//       }, 1000);\n//     }\n//     return () => clearInterval(timer.current);\n//   }, [running]);\n\n//   return (\n//     <div className=\"stopwatch\">\n//       <p className=\"timer\">{format(time)}</p>\n//       <div className=\"actions\">\n//         <button onClick={() => setTime(0)}>Restart</button>\n//         <button\n//           onClick={() => {\n//             if (running) clearInterval(timer.current);\n//             setRunning(!running);\n//           }}\n//         >\n//           {running ? \"Stop\" : \"Resume\"}\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n// const format = (time) => {\n//   let hours = Math.floor((time / 60 / 60) % 24);\n//   let minutes = Math.floor((time / 60) % 60);\n//   let seconds = Math.floor(time % 60);\n\n//   hours = hours < 10 ? \"0\" + hours : hours;\n//   minutes = minutes < 10 ? \"0\" + minutes : minutes;\n//   seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n//   return hours + \":\" + minutes + \":\" + seconds;\n// };\n\n"],"mappings":"AAAA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}