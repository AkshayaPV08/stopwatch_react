{"ast":null,"code":"var _jsxFileName = \"/home/akshaya/Documents/React Workspace/stop-watch/src/Timer.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer() {\n  _s();\n  const [time, setTime] = useState(0);\n  const [running, setRunning] = useState(true);\n  const timer = useRef();\n  useEffect(() => {\n    if (running) {\n      timer.current = setInterval(() => {\n        setTime(prevTime => prevTime + 1);\n      }, 1000);\n    }\n    return () => clearInterval(timer.current);\n  }, [running]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stopwatch\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"appheader\",\n      children: format(time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTime(0),\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (running) clearInterval(timer.current);\n          setRunning(!running);\n        },\n        children: running ? 'Stop' : 'Resume'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 8\n  }, this);\n}\n_s(Timer, \"urWmtj//a5uF2zy+aWZ32wG4L60=\");\n_c = Timer;\nconst format = time => {\n  let hours = Math.floor(time / 60 / 60 % 24);\n  let minutes = Math.floor(time / 60 % 60);\n  let seconds = Math.floor(time % 60);\n  hours = hours < 10 ? '0' + hours : hours;\n  minutes = minutes < 10 ? '0' + minutes : minutes;\n  seconds = seconds < 10 ? '0' + seconds : seconds;\n  return hours + \":\" + minutes + \":\" + seconds;\n};\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useEffect","useState","useRef","jsxDEV","_jsxDEV","Timer","_s","time","setTime","running","setRunning","timer","current","setInterval","prevTime","clearInterval","className","children","format","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","hours","Math","floor","minutes","seconds","$RefreshReg$"],"sources":["/home/akshaya/Documents/React Workspace/stop-watch/src/Timer.js"],"sourcesContent":["import { useEffect, useState ,useRef} from \"react\"\n\nexport default function Timer(){\n\n    const [time,setTime] =useState(0)\n\n    const [running ,setRunning] = useState(true)\n\n\n    const timer = useRef()\n\n    useEffect(() => {\n        if(running){\n        timer.current = setInterval(() => {\n                setTime(prevTime => prevTime + 1)\n            }, 1000)      \n        }\n        return () => clearInterval(timer.current)\n    },[running])\n\n\n\n\n    return (\n       <div className=\"stopwatch\">\n        <p className=\"appheader\">{format(time)}</p>\n        <div className=\"actions\">\n            <button onClick={() => setTime(0)}>Restart</button>\n            <button onClick={() => {\n                if(running) clearInterval(timer.current)\n                    setRunning(!running)\n            }}>{running ? 'Stop' : 'Resume'}</button>\n        </div>\n       </div>\n    )\n}\nconst format = (time) =>{\n    let hours = Math.floor(time / 60 / 60 % 24)\n    let minutes = Math.floor(time / 60 % 60)\n    let seconds = Math.floor(time % 60)\n\n\n    hours = hours <10 ? '0' + hours : hours\n    minutes = minutes <10? '0' + minutes : minutes\n    seconds = seconds < 10? '0' + seconds : seconds\n\n    return hours + \":\" + minutes + \":\" + seconds\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EAE3B,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAEP,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAG5C,MAAMU,KAAK,GAAGT,MAAM,CAAC,CAAC;EAEtBF,SAAS,CAAC,MAAM;IACZ,IAAGS,OAAO,EAAC;MACXE,KAAK,CAACC,OAAO,GAAGC,WAAW,CAAC,MAAM;QAC1BL,OAAO,CAACM,QAAQ,IAAIA,QAAQ,GAAG,CAAC,CAAC;MACrC,CAAC,EAAE,IAAI,CAAC;IACZ;IACA,OAAO,MAAMC,aAAa,CAACJ,KAAK,CAACC,OAAO,CAAC;EAC7C,CAAC,EAAC,CAACH,OAAO,CAAC,CAAC;EAKZ,oBACGL,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACzBb,OAAA;MAAGY,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAEC,MAAM,CAACX,IAAI;IAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3ClB,OAAA;MAAKY,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACpBb,OAAA;QAAQmB,OAAO,EAAEA,CAAA,KAAMf,OAAO,CAAC,CAAC,CAAE;QAAAS,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnDlB,OAAA;QAAQmB,OAAO,EAAEA,CAAA,KAAM;UACnB,IAAGd,OAAO,EAAEM,aAAa,CAACJ,KAAK,CAACC,OAAO,CAAC;UACpCF,UAAU,CAAC,CAACD,OAAO,CAAC;QAC5B,CAAE;QAAAQ,QAAA,EAAER,OAAO,GAAG,MAAM,GAAG;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb;AAAChB,EAAA,CAjCuBD,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAkC7B,MAAMa,MAAM,GAAIX,IAAI,IAAI;EACpB,IAAIkB,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACpB,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EAC3C,IAAIqB,OAAO,GAAGF,IAAI,CAACC,KAAK,CAACpB,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;EACxC,IAAIsB,OAAO,GAAGH,IAAI,CAACC,KAAK,CAACpB,IAAI,GAAG,EAAE,CAAC;EAGnCkB,KAAK,GAAGA,KAAK,GAAE,EAAE,GAAG,GAAG,GAAGA,KAAK,GAAGA,KAAK;EACvCG,OAAO,GAAGA,OAAO,GAAE,EAAE,GAAE,GAAG,GAAGA,OAAO,GAAGA,OAAO;EAC9CC,OAAO,GAAGA,OAAO,GAAG,EAAE,GAAE,GAAG,GAAGA,OAAO,GAAGA,OAAO;EAE/C,OAAOJ,KAAK,GAAG,GAAG,GAAGG,OAAO,GAAG,GAAG,GAAGC,OAAO;AAChD,CAAC;AAAA,IAAAL,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}