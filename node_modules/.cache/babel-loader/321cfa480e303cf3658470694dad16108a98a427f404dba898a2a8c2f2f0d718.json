{"ast":null,"code":"var _jsxFileName = \"/home/akshaya/Documents/React Workspace/stop-watch/src/Timer.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer() {\n  _s();\n  const [time, setTime] = useState(0);\n  const [running, setRunning] = useState(true);\n  const timer = useRef();\n  useEffect(() => {\n    if (running) {\n      timer.current = setInterval(() => {\n        setTime(prevTime => prevTime + 1);\n      }, 1000);\n    }\n    return () => clearInterval(timer.current);\n  }, [running]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stopwatch\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"app-header\",\n      children: format(time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTime(0),\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (running) clearInterval(timer.current);\n          setRunning(!running);\n        },\n        children: running ? \"Stop\" : \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"N1tuNH7VVXX7r9YfQZQIKycjeug=\");\n_c = Timer;\nconst format = time => {\n  let hours = Math.floor(time / 60 / 60 % 24);\n  let minutes = Math.floor(time / 60 % 60);\n  let seconds = Math.floor(time % 60);\n  hours = hours < 10 ? \"0\" + hours : hours;\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\n  return hours + \":\" + minutes + \":\" + seconds;\n};\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useEffect","useState","useRef","jsxDEV","_jsxDEV","Timer","_s","time","setTime","running","setRunning","timer","current","setInterval","prevTime","clearInterval","className","children","format","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","hours","Math","floor","minutes","seconds","$RefreshReg$"],"sources":["/home/akshaya/Documents/React Workspace/stop-watch/src/Timer.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\n\nexport default function Timer() {\n  const [time, setTime] = useState(0);\n\n  const [running, setRunning] = useState(true);\n\n  const timer = useRef();\n\n  useEffect(() => {\n    if (running) {\n      timer.current = setInterval(() => {\n        setTime((prevTime) => prevTime + 1);\n      }, 1000);\n    }\n    return () => clearInterval(timer.current);\n  }, [running]);\n\n  return (\n    <div className=\"stopwatch\">\n      <p className=\"app-header\">{format(time)}</p>\n      <div className=\"actions\">\n        <button onClick={() => setTime(0)}>Restart</button>\n        <button\n          onClick={() => {\n            if (running) clearInterval(timer.current);\n            setRunning(!running);\n          }}\n        >\n          {running ? \"Stop\" : \"Resume\"}\n        </button>\n      </div>\n    </div>\n  );\n}\nconst format = (time) => {\n  let hours = Math.floor((time / 60 / 60) % 24);\n  let minutes = Math.floor((time / 60) % 60);\n  let seconds = Math.floor(time % 60);\n\n  hours = hours < 10 ? \"0\" + hours : hours;\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n  return hours + \":\" + minutes + \":\" + seconds;\n};\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAEnC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMU,KAAK,GAAGT,MAAM,CAAC,CAAC;EAEtBF,SAAS,CAAC,MAAM;IACd,IAAIS,OAAO,EAAE;MACXE,KAAK,CAACC,OAAO,GAAGC,WAAW,CAAC,MAAM;QAChCL,OAAO,CAAEM,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;MACrC,CAAC,EAAE,IAAI,CAAC;IACV;IACA,OAAO,MAAMC,aAAa,CAACJ,KAAK,CAACC,OAAO,CAAC;EAC3C,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;EAEb,oBACEL,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBb,OAAA;MAAGY,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAEC,MAAM,CAACX,IAAI;IAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5ClB,OAAA;MAAKY,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBb,OAAA;QAAQmB,OAAO,EAAEA,CAAA,KAAMf,OAAO,CAAC,CAAC,CAAE;QAAAS,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnDlB,OAAA;QACEmB,OAAO,EAAEA,CAAA,KAAM;UACb,IAAId,OAAO,EAAEM,aAAa,CAACJ,KAAK,CAACC,OAAO,CAAC;UACzCF,UAAU,CAAC,CAACD,OAAO,CAAC;QACtB,CAAE;QAAAQ,QAAA,EAEDR,OAAO,GAAG,MAAM,GAAG;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAhCuBD,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAiC7B,MAAMa,MAAM,GAAIX,IAAI,IAAK;EACvB,IAAIkB,KAAK,GAAGC,IAAI,CAACC,KAAK,CAAEpB,IAAI,GAAG,EAAE,GAAG,EAAE,GAAI,EAAE,CAAC;EAC7C,IAAIqB,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEpB,IAAI,GAAG,EAAE,GAAI,EAAE,CAAC;EAC1C,IAAIsB,OAAO,GAAGH,IAAI,CAACC,KAAK,CAACpB,IAAI,GAAG,EAAE,CAAC;EAEnCkB,KAAK,GAAGA,KAAK,GAAG,EAAE,GAAG,GAAG,GAAGA,KAAK,GAAGA,KAAK;EACxCG,OAAO,GAAGA,OAAO,GAAG,EAAE,GAAG,GAAG,GAAGA,OAAO,GAAGA,OAAO;EAChDC,OAAO,GAAGA,OAAO,GAAG,EAAE,GAAG,GAAG,GAAGA,OAAO,GAAGA,OAAO;EAEhD,OAAOJ,KAAK,GAAG,GAAG,GAAGG,OAAO,GAAG,GAAG,GAAGC,OAAO;AAC9C,CAAC;AAAC,IAAAL,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}